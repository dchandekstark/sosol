:javascript
  // used to form URL to open pop-up window
  helpView = "#{url_for(:controller => 'translation_helper', :action => 'wheretogo')}";
  // 3 variables below used in ajax calls for conversion stuff
  conv_xml_to_translation_leiden = "#{url_for(:controller => 'translation_leiden', :action => 'xml_to_translation_leiden')}";
  //below variable not currently in use - but could easily be put back in if needed
  ajax_get_new_lang = "#{url_for(:controller => 'translation_leiden', :action => 'get_language_translation_leiden')}";
  conv_translation_leiden_to_xml = "#{url_for(:controller => 'translation_leiden', :action => 'translation_leiden_to_xml')}";
= javascript_include_tag 'translation_leiden'
= javascript_include_tag 'menu-for-applications'

= stylesheet_link_tag 'menu-item'
= stylesheet_link_tag 'menu-bar'
/The helper menu is somewhat keyed off the numbering scheme in the li elements and indentations
/have a smart number associated with them.  It starts off with a 1 digit number (when this level goes to
/2 digits, no drop down data is associated).  From then on there are 2 digit numbers used e.g 101, 
/102, etc. meaning the first, second and third level menu items under item 1.  Then the next level
/continues this with 10101, 10102, 10102 meaning the first, second and third level menu items
/under 101.  This same pattern can be continued on to deeper levels of menu if needed. This works
/in correspondence with the menu-bar and menu-item stylesheets and the menu-for-applications 
/javascript.
-# All the javascript functions called below are in translation_leiden.js other than showMatch which is in confirm.js
%ul#menuModel{ :style => "display:inherit"}
  %li#1
    %a{:href => "#", :title => "Leiden+ Input Helpers"} Helpers
    %ul{ :width => "175"}
      %li#101
        %a{ :href => "#"} Gap
        %ul{ :width => "200"}
          %li#10101{ :jsFunction => "insertGaplostMain()"}
            %a{ :href => "#"}Lacuna
          %li#10102{ :itemType => "separator"}
          %li#10103{ :jsFunction => "insertGapIllegibleMain()"}
            %a{ :href => "#"}Illegible
      %li#102{ :itemType => "separator"}
      %li#103{ :jsFunction => "helpDialogOpen('terms')"}
        %a{ :href => "#"} Terms
      %li#104{ :itemType => "separator"}
      %li#105
        -# version using dialog box %li#105{ :jsFunction => "helpDialogOpen('new_lang')"}
        %a{ :href => "#"} New Language
        #comment out this section this to use dialog box version
        %ul{ :width => "115"}
          %li#10701
            %a
              =button_to("български" , options = { :action => 'add_new_lang_to_xml', :lang => 'bg'}, html_options = { :class => "new_lang_button" } )
          %li#10702{ :itemType => "separator"}
          %li#10703
            %a
              =button_to("Deutsch" , options = { :action => 'add_new_lang_to_xml', :lang => 'de'}, html_options = { :class => "new_lang_button" } )
          %li#10704{ :itemType => "separator"}
          %li#10705
            %a
              =button_to("English" , options = { :action => 'add_new_lang_to_xml', :lang => 'en'}, html_options = { :class => "new_lang_button" } )
          %li#10706{ :itemType => "separator"}
          %li#10707
            %a
              =button_to("Français" , options = { :action => 'add_new_lang_to_xml', :lang => 'fr'}, html_options = { :class => "new_lang_button" } )
          %li#10708{ :itemType => "separator"}
          %li#10709
            %a
              =button_to("Italiano" , options = { :action => 'add_new_lang_to_xml', :lang => 'it'}, html_options = { :class => "new_lang_button" } )
          %li#10710{ :itemType => "separator"}
          %li#10711
            %a
              =button_to("Español" , options = { :action => 'add_new_lang_to_xml', :lang => 'sp'}, html_options = { :class => "new_lang_button" } )
          %li#10712{ :itemType => "separator"}
          %li#10713
            %a
              =button_to("Other" , options = { :action => 'add_new_lang_to_xml', :lang => 'OTHER'}, html_options = { :class => "new_lang_button" } )
      %li#106{ :itemType => "separator"}
      
      %li#113{ :jsFunction => "helpDialogOpen('linebreak')" }
        %a{ :href => "#"}Linebreak
      %li#114{ :itemType => "separator"}
      %li#115
        %a{ :href => "#"}Division
        %ul{ :width => "100"}
          %li#11501{ :jsFunction => "insertDivisionMain('r')"}
            %a{ :href => "#"}Recto
          %li#11502{ :itemType => "separator"}
          %li#11503{ :jsFunction => "insertDivisionMain('v')"}
            %a{ :href => "#"}Verso
          %li#11504{ :itemType => "separator"}
          %li#11505{ :jsFunction => "insertDivisionMain('column')"}
            %a{ :href => "#"}Column
          %li#11506{ :itemType => "separator"}
          %li#11507{ :jsFunction => "insertDivisionMain('document')"}
            %a{ :href => "#"}Document
          %li#11508{ :itemType => "separator"}
          %li#11509{ :jsFunction => "insertDivisionMain('folio')"}
            %a{ :href => "#"}Folio
          %li#11510{ :itemType => "separator"}
          %li#11511{ :jsFunction => "insertDivisionMain('fragment')"}
            %a{ :href => "#"}Fragment
          %li#11512{ :itemType => "separator"}
          %li#11513{ :jsFunction => "helpDialogOpen('division')"}
            %a{ :href => "#"}Other
      %li#116{ :itemType => "separator"}
  %li#2{ :itemType => "separator"}
  %li#3{ :jsFunction => "window.open('http://papyri.info/docs/leiden_plus_translation')"}
    %a{ :href => "#"}Translation Leiden Help
  %li#4{ :itemType => "separator"}
  %li#5{ :jsFunction => "insertSpecialCharMain('\\u0323')"}
    %a{ :href => "#"}UnderDot
  %li#6{ :itemType => "separator"}
  %li#7{ :jsFunction => "helpDialogOpen('tryit')"}
    %a{ :href => "#"}Try It
  %li#8{ :itemType => "separator"}
  %li#9{ :jsFunction => "showMatch('hgv_trans_identifier_leiden_trans', \'**POSSIBLE ERROR**\')"}
    %a{ :href => "#", :title => "Find Possible Error"}Find Error
  %li#10{ :itemType => "separator"}
%p
  -if identifier.mutable?
    %div#menuDiv
  -else
    %div#menuDiv{ :style => "display:none"}
