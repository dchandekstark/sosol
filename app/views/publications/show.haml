#main-wrapper.main
  - max_visible_comments = 10
  :javascript 

    function checkForComment() { 
      comment_text = $('submit_comment').value; 
      if ($('community_id') != null)
      {
        var selected_submit = $('community_id').value;
        $('submit_button').disabled = (selected_submit == "")  ||  ( comment_text.replace(/^\s+|\s+$/g, '') == "" )
      }
      else
      {
        $('submit_button').disabled = ( comment_text.replace(/^\s+|\s+$/g, '') == "" )
      } 
    }

    function toggle_div(obj) {
      var el = document.getElementById(obj);
      if ( el.style.display != "none" ) {
        el.style.display = 'none';
      }
      else {
        el.style.display = '';
      }
    }
  =# render :partial => 'identifiers/edit_bar'
  #container.site
    %header
      %h1
        = @publication.title
        - if !@publication.status.nil? && @publication.status != ''
          == (#{@publication.status})
      
    -# render :partial => "common/flash_all"    

    #submit.card
      - if %w{new editing}.include?(@publication.status)
        - if @show_submit
          %h2 Submit
          %p   
            You have changed the following items:
            %ul{:class => 'dashed'}
              - for identifier in @publication.identifiers      
                - if identifier.modified
                  %li
                    = "#{identifier.title} (#{identifier.class::FRIENDLY_NAME  })"
            They will be submitted to the proper boards for review.
            %em You will no longer be able to edit any of the items in this the publication once it is submitted.
            = form_tag({:controller => 'publications',:action => "submit"})  do
              = label_tag "commit-message", "Briefly describe the reason for your submission:"
              = text_area_tag 'submit_comment', "", :class=>"input", :onkeyup => "checkForComment()", :cols => 70, :rows => 4
              = hidden_field_tag 'do_community_signup', @signup_communities.join(',')
              = hidden_field_tag 'do_community_confirm', @confirm_communities.join(',')
        - else
          %p
            %em
              Publication may not be submitted at this time.
          - if !@publication.modified?
            No changes have been made.
      .columns
        - if @show_submit
          .text-center
            .select-container
              = select_tag "community[id]", options_for_select(@submittable_communities, :selected => @publication.community_id.to_s), {:include_blank => true  ,:onchange => "confirmSignup() && checkForComment();", 'data-current' => @publication.community_id.to_s }
              .carret
                %i{:class => "fa fa-caret-down"}
            = submit_tag "Submit to Boards", :onclick => 'this.disabled=true;this.form.submit();', :disabled => true, :class => 'submit margin-left', :id => "submit_button"
        .text-left
          %ul{:class => "unstyled"}
            %li
              = link_to I18n.t('publication.commentslink'), {:controller => 'comments',  :action => 'ask_for', :publication_id => @identifier.publication.id, :method => :get }, :onclick => "window.open(this.href, 'new win', 'width=800, height=600'); return false;".html_safe, :class => 'btn fullsize'
            - if @publication.allow_user_withdrawal?(@current_user)
              %li
                = link_to "Withdraw from Editorial Review", {:controller => 'publications', :id => @publication.id, :action => "confirm_withdraw"}, :class => "btn fullsize"
            - if @allow_delete
              %li
                = link_to "Delete", {:controller => 'publications', :id => @publication.id, :action => "confirm_delete"}, :class => "btn fullsize"
            - if %w{approved voting finalizing}.include?(@publication.status)
              %li
                = link_to "Withdraw from Editorial Review", {:controller => 'publications', :id => @publication.id, :action => "confirm_withdraw"}, :class => "btn fullsize"
            - if @publication.status == "committed"
              %li
                = link_to "Archive", {:controller => 'publications', :id => @publication.id, :action => "confirm_archive"}, :class => "btn fullsize"
            - if @current_user.developer
              %li
                = link_to "developer immediate delete", @publication, :method => :delete, :class => "btn fullsize"
            - if %w{new editing submitted approved voting committed}.include? @publication.status
              %li
                = link_to "Download Copy", {:controller => 'publications', :id => @publication.id, :action => "download"}, :class => "btn fullsize"
            -# if owner is a board, and it is approved, add a button to make me the finalizer
            - if @publication.owner_type == "Board" && @publication.status == "approved"
              -# if i am already the finalizer dont show the button
              - finalizer = @publication.find_finalizer_user
              - if !(finalizer && finalizer.id == @current_user.id)
                %li
                  = button_to "Make me finalizer", { :action => 'become_finalizer', :id => @publication.id, :onclick => 'this.disabled=true;return true;', :class => 'btn fullsize' }
            - if %w{editing new}.include?(@publication.status)
              - for class_type in @creatable_identifiers
                - link_type = class_type.constantize::FRIENDLY_NAME
                - create_type = 'Create new ' + link_type
                - newstyle = 'style="color:white; background-color:#005DAA"'
                %li
                  - if class_type == 'APISIdentifier'
                    - options = ['Create new APIS'] << APISIdentifier.collection_names_hash.sort
                    - form_for :apis, :url => {:controller => 'identifiers', :action => 'create', :publication_id => @publication.id, :identifier_type => class_type} do |f|
                      = select_tag 'apis_collection', options_for_select(options.flatten.uniq), :onchange => "this.form.submit()"
                  - else
                    = link_to(create_type, options = {:controller => 'identifiers', :action => 'create', :publication_id => @publication.id, :identifier_type => class_type, :method => :post}, html_options = {:id => "#{link_type}", :onclick => "$('#{link_type}').replace('<b #{newstyle}>Creating New #{link_type}...</b>');", :class => 'btn fullsize'})

    - if @current_user.developer
      - if @publication.modified?
        %h1 MODIFIED PUBLICATION

    .columns
      .card
        - for identifier in @publication.identifiers
          - if identifier.class::is_visible
            %h2
              == #{identifier.class::FRIENDLY_NAME} -
              = render :partial => "identifiers/pn_link", :locals => {:identifier => identifier}
            %p
              = render :partial => "identifiers/identifier_image", :locals => {:identifier => identifier}
              - if identifier.needs_reviewing?(@current_user.id)
                = image_tag('review_flag.png')
            %span{:class => 'details'}
              = identifier.title

            - if @publication.status != "archived"
              = render :partial => identifier

      - if @all_comments != nil  || @xml_only_comments != nil || (@other_user_publications != nil && @other_user_publications.length > 0)
        .card
        - if @all_comments != nil
          %div{:id => "all_comments_div", :style => "display:none;"}
            %br
            %div{:class => "toggle_all_div"}
              %a{:class => 'toggle_all_link', :href => '#', :onclick => "toggle_div('all_comments_div');toggle_div('xml_only_comments_div');"}
                See XML Comments Only
            %br
            %h3 All Comments
            = render :partial => "publications/commentall",  :object => @all_comments[0..max_visible_comments-1]
            - if @all_comments.length > max_visible_comments
              %div{:id => "more_comments", :style => "display:none;"}
                = render :partial => "publications/commentall", :object => @all_comments[max_visible_comments..-1]
              %div{:id => "more_comments_link"}
                %a{:class => 'morelink', :href => '#', :onclick => "Effect.SlideDown('more_comments');Effect.SlideUp('more_comments_link');Effect.SlideDown('less_comments_link');return false;"}
                  More...
              %div{:id => "less_comments_link", :style => "display:none;"}
                %a{:class => 'lesslink', :href => '#', :onclick => "Effect.SlideUp('more_comments');Effect.SlideDown('more_comments_link');Effect.SlideUp('less_comments_link');return false;"}
                  Less...
     
        - if @xml_only_comments != nil
          %div{:id => "xml_only_comments_div", :style => "display:;"}
            %br
            %div{:class => "toggle_xml_only_div"}
              %a{:class => 'toggle_xml_only_link', :href => '#', :onclick => "toggle_div('all_comments_div');toggle_div('xml_only_comments_div');"}
              See All Comments
            %br
            %h3 XML Comments
            = render :partial => "publications/commentall",  :object => @xml_only_comments[0..max_visible_comments-1]
            - if @xml_only_comments.length > max_visible_comments
              %div{:id => "more_xml_comments", :style => "display:none;"}
                = render :partial => "publications/commentall", :object => @xml_only_comments[max_visible_comments..-1]
              %div{:id => "more_xml_comments_link"}
                %a{:class => 'morelink', :href => '#', :onclick => "Effect.SlideDown('more_xml_comments');Effect.SlideUp('more_xml_comments_link');Effect.SlideDown('less_xml_comments_link');return false;"}
                  More...
              %div{:id => "less_xml_comments_link", :style => "display:none;"}
                %a{:class => 'lesslink', :href => '#', :onclick => "Effect.SlideUp('more_xml_comments');Effect.SlideDown('more_xml_comments_link');Effect.SlideUp('less_xml_comments_link');return false;"}
                  Less...
            
        - if @other_user_publications != nil && @other_user_publications.length > 0
          %br
          %h3 This publication is also being edited by:
          %ul
            - for other_pub in @other_user_publications
              %li
                = other_pub.creator.human_name
                == <#{mail_to(other_pub.creator.email, nil, :subject => "#{Sosol::Application.config.site_name} - Publication #{other_pub.title}")}>
                == (last edited #{time_ago_in_words(other_pub.updated_at)} ago)


=javascript_include_tag "communities"

